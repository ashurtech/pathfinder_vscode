{
  "name": "pathfinder-openapi-explorer",
  "displayName": "Pathfinder - OpenAPI Explorer",
  "description": "Explore, test, and generate code for OpenAPI/REST APIs with intelligent platform detection",
  "version": "0.1.2",
  "publisher": "pathfinder",
  "repository": {
    "type": "git",
    "url": "https://github.com/pathfinder/openapi-explorer.git"
  },
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other",
    "Testing",
    "Snippets"
  ],
  "keywords": [
    "openapi",
    "swagger",
    "rest",
    "api",
    "testing",
    "explorer",
    "kibana",
    "elasticsearch"
  ],
  "activationEvents": [],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "pathfinder.helloWorld",
        "title": "Hello World",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.addEnvironment",
        "title": "Add API Environment",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.listEnvironments",
        "title": "List API Environments",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.deleteEnvironment",
        "title": "Delete API Environment",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.loadSchemaFromUrl",
        "title": "Load Schema from URL",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.loadSchemaFromFile",
        "title": "Load Schema from File",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.showSchemaInfo",
        "title": "Show Schema Information",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.showStorageStats",
        "title": "Show Storage Statistics",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.refreshTree",
        "title": "Refresh",
        "icon": "$(refresh)",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.showEnvironmentDetails",
        "title": "Show Environment Details",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.showSchemaDetails",
        "title": "Show Schema Details",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.showEndpointDetails",
        "title": "Show Endpoint Details",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.generateCodeForEndpoint",
        "title": "Generate Code",
        "icon": "$(code)",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.addEnvironmentGroup",
        "title": "Add Environment Group",
        "icon": "$(folder-opened)",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.editGroup",
        "title": "Edit Group",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.deleteGroup",
        "title": "Delete Group",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.addEnvironmentToGroup",
        "title": "Add Environment to Group",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.removeEnvironmentFromGroup",
        "title": "Remove from Group",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.generateMultiEnvironmentCode",
        "title": "Generate Code for All Environments",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.showGroupDetails",
        "title": "Show Group Details",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.runHttpRequest",
        "title": "Run HTTP Request",
        "icon": "$(play)",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.executeHttpRequest",
        "title": "Execute HTTP Request",
        "category": "Pathfinder"
      },
      {
        "command": "pathfinder.toggleAuthVisibility",
        "title": "Toggle Authorization Visibility",
        "icon": "$(eye)",
        "category": "Pathfinder"
      }
    ],
    "configuration": {
      "title": "Pathfinder - OpenAPI Explorer",
      "properties": {
        "pathfinder.requestTimeout": {
          "type": "number",
          "default": 30000,
          "description": "Default timeout for API requests in milliseconds"
        },
        "pathfinder.defaultCodeFormat": {
          "type": "string",
          "enum": ["curl", "ansible", "powershell", "javascript", "python"],
          "default": "curl",
          "description": "Default format for generated code snippets"
        },
        "pathfinder.autoValidateSchemas": {
          "type": "boolean",
          "default": true,
          "description": "Automatically validate OpenAPI schemas when loaded"
        },
        "pathfinder.maxHistoryItems": {
          "type": "number",
          "default": 50,
          "description": "Maximum number of request history items to keep"
        }
      }
    },
    "languages": [
      {
        "id": "http",
        "aliases": ["HTTP", "http"],
        "extensions": [".http", ".rest"],
        "configuration": "./language-configuration.json"
      }
    ],
    "views": {
      "explorer": [
        {
          "id": "pathfinderExplorer",
          "name": "Pathfinder",
          "when": "true"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "pathfinder.refreshTree",
          "when": "view == pathfinderExplorer",
          "group": "navigation"
        },
        {
          "command": "pathfinder.addEnvironmentGroup",
          "when": "view == pathfinderExplorer",
          "group": "navigation"
        },
        {
          "command": "pathfinder.addEnvironment",
          "when": "view == pathfinderExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "pathfinder.generateCodeForEndpoint",
          "when": "view == pathfinderExplorer && viewItem == endpoint",
          "group": "inline"
        },
        {
          "command": "pathfinder.deleteEnvironment",
          "when": "view == pathfinderExplorer && (viewItem == environment || viewItem == environment-grouped)",
          "group": "management"
        },
        {
          "command": "pathfinder.removeEnvironmentFromGroup",
          "when": "view == pathfinderExplorer && viewItem == environment-grouped",
          "group": "management"
        },
        {
          "command": "pathfinder.editGroup",
          "when": "view == pathfinderExplorer && viewItem == environmentGroup",
          "group": "management"
        },
        {
          "command": "pathfinder.deleteGroup",
          "when": "view == pathfinderExplorer && viewItem == environmentGroup",
          "group": "management"
        },
        {
          "command": "pathfinder.generateMultiEnvironmentCode",
          "when": "view == pathfinderExplorer && viewItem == environmentGroup",
          "group": "generation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.100.0",
    "@types/swagger-parser": "^7.0.1",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "esbuild": "^0.25.3",
    "eslint": "^9.25.1",
    "npm-run-all": "^4.1.5",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "axios": "^1.7.9",
    "swagger-parser": "^10.0.3",
    "openapi-types": "^12.1.3"
  }
}
